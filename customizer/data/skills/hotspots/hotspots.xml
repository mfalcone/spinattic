<krpano>


<textstyle name="hotspotTxt" font="arial" fontsize="14" bold="false" italic="false" 
	           textcolor="0xFFFFFF" background="true" backgroundcolor="0x000000" border="false" bordercolor="0" 
	           alpha="0.8" blendmode="normal" effect="glow(0x000000,1,10,100);"
	           origin="cursor" edge="center" textalign="center" xoffset="4" yoffset="-25" noclip="true" showtime="0.1" fadetime="0" fadeintime="0" 
	/>


<!-- photos hotposts -->
	<data name="photo" content="" />

	<plugin name="wait"  keep="true" align="center" visible="false" handcursor="false" zorder="-201" url="http://dev.spinattic.com/styles/hotspots/wait.png" crop="0|0|75|75" frames="7" framewidth="75" frameheight="75" frame="0" onloaded="animate();" />

	<action name="animate">
	inc(frame,1,get(frames),0);mul(ypos,frame,frameheight);txtadd(crop,'0|',get(ypos),'|',get(framewidth),'|',get(frameheight));delayedcall(0.03, animate() );
	</action>

	<action name="seewait">
	set(plugin[wait].visible,true);
	</action>
	<action name="hidewait">
	set(plugin[wait].visible,false);
	</action>


	<!-- calc the max. flyout size of a hotspot for the current screen size -->
	<action name="calc_flyout_size">
		div(screen_sideaspect, stagewidth, stageheight);
		div(hotspot_sideaspect, hotspot[%1].width, hotspot[%1].height);
		
		if(screen_sideaspect LT hotspot_sideaspect,
			<!-- align at screen width -->
			div(hotspot[%1].width,stagewidth,stageheight);
			mul(hotspot[%1].width,80);
			txtadd(hotspot[%1].width,'%');
			set(hotspot[%1].height,prop);
		  ,
		  <!-- align at screen height -->
			set(hotspot[%1].width,prop);
			set(hotspot[%1].height,50%);
		  );
	</action>

	<!-- fly in a hotspot = show hotspot fixed at screen -->
	<action name="flyin">
		if(hotspot[%1].flying == 0.0, hotspot[%1].resetsize(); calc_flyout_size(%1); );
		if(hotspot[%1].oldscale === null, copy(hotspot[%1].oldscale, hotspot[%1].scale) );
		if(hotspot[%1].oldrx === null, copy(hotspot[%1].oldrx, hotspot[%1].rx) );
		if(hotspot[%1].oldry === null, copy(hotspot[%1].oldry, hotspot[%1].ry) );
		if(hotspot[%1].oldrz === null, copy(hotspot[%1].oldrz, hotspot[%1].rz) );
		set(hotspot[%1].enabled,true);
		set(hotspot[%1].visible,true);
		set(hotspot[%1].zorder, 200);
		tween(hotspot[%1].alpha,  1.0, 0.5, default, hidewait());
		tween(hotspot[%1].flying, 1.0, 0.5);
		tween(hotspot[%1].scale,  1.0, 0.5);
		tween(hotspot[%1].rx, 0.0, 0.5);
		tween(hotspot[%1].ry, 0.0, 0.5);
		tween(hotspot[%1].rz, 0.0, 0.5);
	</action>

	<!-- fly the hotspot out/back -->
	<action name="flyout">
		set(hotspot[%1].enabled,false);
		tween(hotspot[%1].alpha,  0.0, 0.5, default, set(hotspot[%1].visible,false); );
		tween(hotspot[%1].flying, 0.0);
		tween(hotspot[%1].scale,  get(hotspot[%1].oldscale));
		tween(hotspot[%1].rx,  get(hotspot[%1].oldrx));
		tween(hotspot[%1].ry,  get(hotspot[%1].oldry));
		tween(hotspot[%1].rz,  get(hotspot[%1].oldrz));
		set(opened,false);
	</action>	       
	       
	<action name="showpic">
		<!-- creates a new hotspot and fly it out -->
		flyout(get(data[photo].content));
		txtadd(picname,get(xml.scene),get(name));
		if( hotspot[get(picname)] === null,
			txtadd(picfilename,%CURRENTXML%/../,get(pic));
			addhotspot(get(picname));
			getcenter(hsath,hsatv);
			copy(hotspot[get(picname)].ath, hsath);
			copy(hotspot[get(picname)].atv, hsatv);
			set(hotspot[get(picname)].visible,false);
			set(hotspot[get(picname)].distorted,true);
			set(hotspot[get(picname)].zorder,200);
			set(hotspot[get(picname)].scale,0.1);
			set(hotspot[get(picname)].alpha,0.0);
			set(hotspot[get(picname)].keep,true);
			set(hotspot[get(picname)].onhover,showtext(Close,hotspotTxt));
			set(hotspot[get(picname)].handcursor,true);
			set(hotspot[get(picname)].onloaded, flyin(get(name)) );
			set(hotspot[get(picname)].onclick, flyout(get(name)) );
			copy(hotspot[get(picname)].url,picfilename);
		,
			flyin(get(picname));
		);
		set(opened,true);
			set(data[photo].content,get(picname));
	</action>
<!-- end photo hotspots -->


<action name="showinfo">
	if(plugin[info_text] === null, 
		addplugin(info_text); 
		plugin[info_text].loadstyle(infoText);
		set(plugin[info_text].visible,true); 

		txtadd(infoContent,'[h1]','%1','[/h1][p]','%2','[/p]'); 
		set(plugin[info_text].html,get(infoContent) ); 

		addplugin(close_info); 
		plugin[close_info].loadstyle(closeInfo);
	, 
		set(plugin[info_text].visible,true); 
		txtadd(infoContent,'[h1]','%1','[/h1][p]','%2','[/p]'); 
		set(plugin[info_text].html,get(infoContent) );
	);
</action>

<action name="closeinfo">set(plugin[info_text].visible,false);</action>



<action name="draghotspot">
	<![CDATA[
		if(%1 != dragging,
			spheretoscreen(ath, atv, hotspotcenterx, hotspotcentery);
			sub(drag_adjustx, mouse.stagex, hotspotcenterx); 
			sub(drag_adjusty, mouse.stagey, hotspotcentery); 
			draghotspot(dragging);
		  ,
			if(pressed,                                                                
				sub(dx, mouse.stagex, drag_adjustx);
				sub(dy, mouse.stagey, drag_adjusty);
				screentosphere(dx, dy, ath, atv);
				copy(print_ath, ath);
				copy(print_atv, atv);
				roundval(print_ath, 3);
				roundval(print_atv, 3);				
				delayedcall(0, draghotspot(dragging) );
			  );
		  );
	]]>
	</action>
	
<style name="infoText" url="%SWFPATH%/plugins/textfield.swf" width="450" keep="true" align="center" autosize="true" css="data:cssInfo" padding="20" background="true" backgroundcolor="0x000000" backgroundalpha="0.8" handcursor="false" selectable="true" shadow="1.0" shadowrange="2.0" shadowangle="45" shadowcolor="0xFFFFFF" shadowalpha="0.7" onloaded="if(device.mobile,set(css,data:cssInfo_mobile));" />
<data name="cssInfo">
h1{font-size:18px;font-family:arial;color:#FFFFFF;font-weight:bold;}
p{font-size:14px;font-family:arial;color:#FFFFFF;}
</data>
<data name="cssInfo_mobile">
h1{font-size:26px;font-family:arial;color:#FFFFFF;font-weight:bold;}
p{font-size:18px;font-family:arial;color:#FFFFFF;}
</data>
<style name="closeInfo" url="http://dev.spinattic.com/styles/hotspots/x.png" parent="info_text" align="topright" x="10" y="10" keep="true" onclick="closeinfo()" scale="0.5" onloaded="if(device.mobile,set(scale,1));" />


</krpano>