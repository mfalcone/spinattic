<krpano version="1.0.8" >
<events 
		onxmlcomplete="if(opened === true,flyout(get(data[photo].content)) )"
/>

	<data name="photo" content="" />

	<plugin name="pre-logo"  keep="true" align="center" visible="false" handcursor="false" zorder="-201" url="wait.png" crop="0|0|75|75" frames="7" framewidth="75" frameheight="75" frame="0" onloaded="animate();" />

<action name="seeLogo">
set(plugin[pre-logo].visible,true);
</action>
<action name="hidelogo">
set(plugin[pre-logo].visible,false);
</action>

<action name="animate">
inc(frame,1,get(frames),0);
mul(ypos,frame,frameheight);
txtadd(crop,'0|',get(ypos),'|',get(framewidth),'|',get(frameheight));
delayedcall(0.03, animate() );
</action>


	<!-- calc the max. flyout size of a hotspot for the current screen size -->
	<action name="calc_flyout_size">
		div(screen_sideaspect, stagewidth, stageheight);
		div(hotspot_sideaspect, hotspot[%1].width, hotspot[%1].height);
		
		if(screen_sideaspect LT hotspot_sideaspect,
			<!-- align at screen width -->
			div(hotspot[%1].width,stagewidth,stageheight);
			mul(hotspot[%1].width,80);
			txtadd(hotspot[%1].width,'%');
			set(hotspot[%1].height,prop);
		  ,
		  <!-- align at screen height -->
			set(hotspot[%1].width,prop);
			set(hotspot[%1].height,50%);
		  );
	</action>

	<!-- fly in a hotspot = show hotspot fixed at screen -->
	<action name="flyin">
		if(hotspot[%1].flying == 0.0, hotspot[%1].resetsize(); calc_flyout_size(%1); );
		if(hotspot[%1].oldscale === null, copy(hotspot[%1].oldscale, hotspot[%1].scale) );
		if(hotspot[%1].oldrx === null, copy(hotspot[%1].oldrx, hotspot[%1].rx) );
		if(hotspot[%1].oldry === null, copy(hotspot[%1].oldry, hotspot[%1].ry) );
		if(hotspot[%1].oldrz === null, copy(hotspot[%1].oldrz, hotspot[%1].rz) );
		set(hotspot[%1].enabled,true);
		set(hotspot[%1].visible,true);
		set(hotspot[%1].zorder, 200);
		tween(hotspot[%1].alpha,  1.0, 0.5, default, hidelogo());
		tween(hotspot[%1].flying, 1.0, 0.5);
		tween(hotspot[%1].scale,  1.0, 0.5);
		tween(hotspot[%1].rx, 0.0, 0.5);
		tween(hotspot[%1].ry, 0.0, 0.5);
		tween(hotspot[%1].rz, 0.0, 0.5);
	</action>

	<!-- fly the hotspot out/back -->
	<action name="flyout">
		set(hotspot[%1].enabled,false);
		tween(hotspot[%1].alpha,  0.0, 0.5, default, set(hotspot[%1].visible,false); );
		tween(hotspot[%1].flying, 0.0);
		tween(hotspot[%1].scale,  get(hotspot[%1].oldscale));
		tween(hotspot[%1].rx,  get(hotspot[%1].oldrx));
		tween(hotspot[%1].ry,  get(hotspot[%1].oldry));
		tween(hotspot[%1].rz,  get(hotspot[%1].oldrz));
		set(opened,false);
	</action>	       
	       
	<action name="showpic">
		<!-- creates a new hotspot and fly it out -->
		
		flyout(get(data[photo].content));
		
		if( hotspot[get(pic)] === null,
			txtadd(picurl,'photos/',get(pic));
			addhotspot(get(pic));
			getcenter(hsath,hsatv);
			copy(hotspot[get(pic)].ath, hsath);
			copy(hotspot[get(pic)].atv, hsatv);
			set(hotspot[get(pic)].visible,false);
			set(hotspot[get(pic)].distorted,true);
			set(hotspot[get(pic)].zorder,200);
			set(hotspot[get(pic)].scale,0.1);
			set(hotspot[get(pic)].alpha,0.0);
			set(hotspot[get(pic)].keep,true);
			set(hotspot[get(pic)].onhover,showtext(Close,hotspotTxt));
			set(hotspot[get(pic)].handcursor,true);
			set(hotspot[get(pic)].onloaded, flyin(get(name)) );
			set(hotspot[get(pic)].onclick, flyout(get(name)) );
			copy(hotspot[get(pic)].url,picurl);
			
		,
			flyin(get(pic));
			
		);
		set(opened,true);
			set(data[photo].content,get(pic));

	</action>
	
</krpano>